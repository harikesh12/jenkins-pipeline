pipeline {
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment{
        scanner_home = tool 'Sonar-Scanner'
        GIT_REPO_NAME = "Tetris-manifest"
        GIT_USER_NAME = "harikesh12"
    }
    stages {
        stage('clean workspace') {
            steps {
                cleanWs()
            }
        }
        stage('code checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/harikesh12/Tetris-V2.git'
            }
        }
        stage('sonar-scanner') {
            steps {
                 withSonarQubeEnv('sonar-server') {
                    sh ''' $scanner_home/bin/sonar-scanner -Dsonar.projectName=TetrisV2 \
                    -Dsonar.projectKey=TetrisV2 '''
                }
            }
        }
        stage('quality-gate') {
            steps {
                 script {
                     waitForQualityGate abortPipeline: false, credentialsId: 'sonarqube-token'
                 }
                }
            }
        stage('npm install') {
            steps {
                sh 'npm install'
            }
        }
        stage('tricy scan') {
            steps {
                sh 'trivy fs . > trivy.txt'
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('docker build and push') {
            steps {
                script {
                withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                 sh '''
                docker build -t tetrisv2 .
                docker tag tetrisv2 harikesh12/tetrisv2:latest
                docker push harikesh12/tetrisv2:latest
                '''
                 }
                 }
            }
        }
        stage('trivy  scan image') {
            steps {
                sh 'trivy image harikesh12/tetrisv2:latest  > trivyimage.txt'
            }
        }
        stage('Deployment approval'){
            steps{
                input 'Please approve to proceed for deployment'
            }
        }

        stage('trigger deployment'){
            steps{
                build job: 'tetris-deployment', wait: true
            }
        }
        }
    }
